global:
  postgresql:
    auth:
      postgresPassword: "Pay@1234AB!"

postgresqlDataDir: /var/lib/postgresql/data
architecture: replication
primary:
  name: primary
  persistence: 
    storageClass: allpay-postgresql-storage
    mountPath: /var/lib/postgresql
  resources:
    limits:
      memory: "10Gi"
      cpu: "10"
      ephemeral-storage: "2Gi"
    requests:
      memory: "128Mi"
      cpu: "100m"
      ephemeral-storage: "50Mi"

readReplicas:
  name: secondary
  replicaCount: 1
  persistence: 
    storageClass: allpay-postgresql-replica-storage
    mountPath: /var/lib/postgresql
  resources:
    limits:
      memory: "2Gi"
      cpu: "2"
      ephemeral-storage: "1Gi"
    requests:
      memory: "128Mi"
      cpu: "100m"
      ephemeral-storage: "50Mi"

replication:
  numSynchronousReplicas: 1

backup:
  enabled: true
  cronjob:
    schedule: "0 1 * * *"
    timezone: "Asia/Bangkok"
    command:
    - /bin/bash
    - "-c"
    - |
      pg_dump --clean --if-exists --load-via-partition-root --quote-all-identifiers share_master | gzip > ${PGDUMP_DIR}/share_master-$(TZ="Asia/Bangkok" date '+%Y%m%d%H%M').sql.gz &&
      pg_dump --clean --if-exists --load-via-partition-root --quote-all-identifiers allpay_vendor | gzip > ${PGDUMP_DIR}/allpay_vendor-$(TZ="Asia/Bangkok" date '+%Y%m%d%H%M').sql.gz &&
      pg_dump --clean --if-exists --load-via-partition-root --quote-all-identifiers vendor_portal | gzip > ${PGDUMP_DIR}/vendor_portal-$(TZ="Asia/Bangkok" date '+%Y%m%d%H%M').sql.gz &&
      find ${PGDUMP_DIR}/ -type f -name *.gz -mtime +30 -exec rm {} \;
    storage:
      storageClass: allpay-postgresql-backup-storage
    resources:
      limits:
        memory: "4Gi"
        cpu: "2"
        ephemeral-storage: "1Gi"
      requests:
        memory: "128Mi"
        cpu: "100m"
        ephemeral-storage: "50Mi"