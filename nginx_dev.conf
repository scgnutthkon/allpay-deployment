map $http_connection $connection_upgrade {
    "~*Upgrade" $http_connection;
    default keep-alive;
}


server {
    listen 80;
    # server_name _;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

upstream k8s_backend {
        server 10.109.147.238;
}

server {
#       listen 80;
        listen 443 ssl;
        # server_name _;

        ssl_certificate /etc/ssl/certs/star_scg_com.crt;
        ssl_certificate_key /etc/ssl/private/star_scg_com.key;

        client_max_body_size 100M;

        location / {

            proxy_pass http://k8s_backend;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Connection ""; # Clear the Connection header to avoid issues with SSE, WebSocket connections
            proxy_cache off;
            proxy_http_version 1.1; # Use HTTP/1.1 for SSE, WebSocket connections

            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;

            proxy_buffering                         off; # Disable buffering for SSE, WebSocket connections
            proxy_buffer_size                       256k;
            proxy_buffers                           8 256k;

            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;

            add_header Strict-Transport-Security "max-age=31536000" always;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options "nosniff";

        }
}